- Implement all cases for the SignatureAnalyser

- Export referenced classes in the XML output

- Discover how to source all attributes from XML spec into attribute reading

- Support sets of classes, i.e. self, standard, enterprise -> ClassDomain

- Implement combination of all referenced resources per jar (kind of finalize?)

-------------------------

- compile list of se classes and ee classes
    - decide which class keeps this state

- extend roadmap with
    techno-tools
        artificer                                       -> generates data
        artificer-javadoc                               -> generates presentation
        artificer-camel-route                           -> generates presentation

- keep track of annotations??

- Discover how sequence diagrams can be extracted (i.e. what stateful data must be preserved)

- keep track of invoked methods?? -> derive sequence diagrams

- other stuf
    /analysis/dotxml
        MetaInfManager
        OsgiInfManager
        WebInfManager

    /analysis/dotmf
        ManifestManager

------------------------------
The extended idea is to have:
- [ ] Provide a graphical representation of these .classes, using the groups, packages and weight factors (the actual view)
- [ ] Identification of patterns applied (identifying the interfaces and implementations of those interfaces)
- [ ] Generation of a class diagram
- [ ] Generation of component diagram
- [ ] Generation of sequence diagram
- [ ] Create interactive layer with drill down functionality, so visual scope can be manipulated