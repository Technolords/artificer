- implement ClassReferenceAnalyser:
    - create method that extracts a 'normalized' class (x/y/z)
       - name_index                                     -> index constant pool (utf8)
       - class_index                                    -> index constant pool (field, method, interfacemethod)
       - name_and_type_index                            -> index constant pool (name_and_type)
       - string_index                                   -> index constant pool (utf8)
       - descriptor_index                               -> index constant pool (utf8)
       - reference_kind                                 -> value 1 to 9
    - expose method on main interface to retrieve list of referenced classes??

v test with simple class with nested instantion of another class and see if bytecodemanager picks this up

- test with generics
public static <T> ArrayList<T> createArrayList(T ... elements) {
        ArrayList<T> list = new ArrayList<T>();
        for (T element : elements) {
            list.add(element);
        }
        return list;
    }

- test with static initializer blocks

- compile list of se classes and ee classes
    - decide which class keeps this state

- extend roadmap with
    techno-tools
        artificer                                       -> generates data
        artificer-javadoc                               -> generates presentation
        artificer-camel-route                           -> generates presentation

- keep track of annotations??

- other stuf
    /analysis/dotxml
        MetaInfManager
        OsgiInfManager
        WebInfManager

    /analysis/dotmf
        ManifestManager