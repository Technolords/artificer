- implement ClassReferenceAnalyser:
    - create method that extracts a 'normalized' class (x/y/z)
       - name_index                                     -> index constant pool (utf8)
       - class_index                                    -> index constant pool (field, method, interfacemethod)
       - name_and_type_index                            -> index constant pool (name_and_type)
       - string_index                                   -> index constant pool (utf8)
       - descriptor_index                               -> index constant pool (utf8)
       - reference_kind                                 -> value 1 to 9
    - expose method on main interface to retrieve list of referenced classes??

v test with simple class with nested instantiation of another class and see if bytecodemanager picks this up

- use samples from: http://classfileanalyzer.javaseiten.de/index.html
- read invoke dynamic: http://www.javaworld.com/article/2860079/learn-java/invokedynamic-101.html

- test with generics
public static <T> ArrayList<T> createArrayList(T ... elements) {
        ArrayList<T> list = new ArrayList<T>();
        for (T element : elements) {
            list.add(element);
        }
        return list;
    }

public <T> T max(List<T> list, Comparator<T> comp) {
   T biggestSoFar = list.get(0);
   for ( T t : list ) {
       if (comp.compare(t, biggestSoFar) > 0) {
          biggestSoFar = t;
       }
   }
   return biggestSoFar;
}

public static <K, U> Collector<Map.Entry<K, U>, ?, Map<K, U>> entriesToMap() {
    return Collectors.toMap((e) -> (e).getKey(), (e) -> (e).getValue());
}

public static <K, U> Collector<Map.Entry<K, U>, ?, Map<K, U>> entriesToMap() {
    return Collectors.toMap((e) -> e.getKey(), (e) -> e.getValue());
}

- test with static initializer blocks

- compile list of se classes and ee classes
    - decide which class keeps this state

- extend roadmap with
    techno-tools
        artificer                                       -> generates data
        artificer-javadoc                               -> generates presentation
        artificer-camel-route                           -> generates presentation

- keep track of annotations??

- other stuf
    /analysis/dotxml
        MetaInfManager
        OsgiInfManager
        WebInfManager

    /analysis/dotmf
        ManifestManager